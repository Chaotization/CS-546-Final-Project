<form method="POST" action="/posts" id="post-form" enctype="multipart/form-data">
  <div class="container center">
    <h1 class="login">Posts</h1>
    <div class="inf">
      <div class="sec-1">
        <label for="postCategory">Post Category:</label>
      </div>
      <div class="sec-2">
        <select name="postCategory" id="postCategory">
          <option value="education">Education</option>
          <option value="sports">Sports</option>
          <option value="entertainment">Entertainment</option>
        </select>
      </div>
    </div>
    <div class="inf">
      <div class="sec-1">

        {{!-- <label for="postContent">Post Content:</label>
        <textarea name="postContent" rows="6" maxlength="300" id="postContent" required></textarea><br> --}}

        <label for="postContent">Post Content: </label>
      </div>
      <div class="sec-2">
        <textarea name="postContent" rows="6" maxlength="300" id="postContent" required></textarea>
      </div>
    </div>
    <div>
        <p>Upload Image</p>
    <input type="file" name="postImage">
    <button type="submit" class="registerbtn">Add Post</button>

    {{!-- <button type="submit">Add Post</button> --}}
  </div>
</form><br>
</div>



<p id="error-message">{{Error}}</p>

<img id="image-preview" src="#" alt="Preview of uploaded image" style="display:none;">

<script>
  const postImageInput = document.getElementById("postImage");
  const imagePreview = document.getElementById("image-preview");

  postImageInput.addEventListener("change", function () {
    const file = this.files[0];
    const reader = new FileReader();

    reader.addEventListener("load", function () {
      imagePreview.src = reader.result;
      imagePreview.style.display = "block";
    });

    reader.readAsDataURL(file);
  });
</script>



{{#each posts}}
    <div class="post-container">
        <h2>{{content}}</h2>
        <img id="img-home" src="{{image}}" alt="Post image">
        <p>Category: {{category}}</p>
        <p>Created by: {{name}}</p>
        <p>Created at: {{created_Date}}</p>
        <button type="{{likes}}" class="btn"><i class="fa fa-thumbs-up">Like</i></button>
        <button type="{{dislikes}}" class="btn"><i class="fa fa-thumbs-down">Dislike</i></button>
                  
        <div class="comments-container">
            <h3>Comments:</h3>
            {{#each comments}}
                <div class="comment-container">
                <p>{{text}}</p>
                <p>Posted by: {{author}}</p>
                <p>Posted at: {{created_Date}}</p>
                </div>
        {{/each}}<br>
            <form class="comment-form" id="comment-form-{{_id}}" action="/posts/{{_id}}/comment" method="POST">
                  <input type="hidden" name="postId" value="{{_id}}">
                  <label for="comment-text-{{_id}}">Add a Comment:</label>
                  <input type="text" name="commentText" id="comment-text-{{_id}}">
                  <input type="submit" value="Submit">
              </form>
            <a href="/posts/{{_id}}/allComments" id="view-comments">View Comments</a>
        </div>
        {{#if deletable}}
            <button class="delete-btn" onClick ="deletePost('{{_id}}')" data-post-id="{{_id}}">Delete</button>
        {{/if}}
    </div>
{{/each}}

<script>

function myFunction(x) {
  x.classList.toggle("fa-thumbs-down");
}

function deletePost(id) {
  fetch(`/posts/${id}`, {
    method: "delete",
    headers: {
      Accept: 'application/json, text/plain, */*',
      "Content-type": 'application/json'
    },
  })
  .then(response => {
  if (response.ok) {
    alert('Post deleted successfully');
    window.location.href = '/homepage';
  } else {
    throw new Error('Network response was not ok');
  }
})
  .catch(error => {
    alert(error.message || "Something went wrong.");
  })
  .then(() => {
    console.log('This will run after either success or failure');
  });
}

document.querySelectorAll('.comment-form').forEach(form => {
      form.addEventListener('submit', function(event){
          event.preventDefault();
          const commentText = this.querySelector('input[name="commentText"]').value;
          const postId = this.querySelector('input[name="postId"]').value;
          fetch(`/posts/${postId}/comment`, {
              method: "post",
              body: JSON.stringify({commentText: commentText}),
              headers: {
                  "Content-Type": "application/json"
              }
          })
          .then(response => {
              if (response.ok) {
                  alert('Comment added successfully');
                  window.location.href = `/homepage`;
              } else {
                  throw new Error('Network response was not ok');
              }
          })
          .catch(error => {
              alert(error.message || "Something went wrong.");
          })
          .then(() => {
              console.log('This will run after either success or failure');
          });
      });
  });

const likeBtn = document.getElementById(`like-btn-${postId}`);
likeBtn.addEventListener('click', async () => {
  const response = await fetch(`/posts/${postId}/increaseLikes`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    }
  });
  if (response.ok) {
    const post = await response.json();
    likeBtn.innerHTML = `<i class="fa fa-thumbs-up"></i> Like (${post.likes})`;
  } else {
    console.error('Failed to increase likes');
  }
});

document.querySelectorAll('.dislike-btn').forEach(btn => {
  btn.addEventListener('click', () => {
    const postId = btn.dataset.postId;
    fetch(`/increaseDislikes?postId=${postId}`)
      .then(response => response.json())
      .then(data => {
        btn.textContent = `Dislike (${data.dislikes})`;
      })
      .catch(error => console.error(error));
  });
});



</script>
<link rel="stylesheet" href="/public/css/homepage.css">

